function [data,trialTime,trial,experimentTime] = getproperty(output,eventName,srcName,varargin)
% Function that retrieves event information from a Neurostim output data
% struct. 
%
%  output - The saved output data struct, generated by neurostim.output
% eventName - The name of the event/property
% srcName - The name of the plugin (or Stimulus) that generated this event/property
% Additional input arguments:
% 'onePerTrial'  - Toggle to return the effective value for each trial
% . This can be useful for a stimulus property that is not changed every trial 
% but affects the stimulus in every trial (because the property has been
% changed in a previous trial). Note that if the property you request
% changes within a trial, this function will return an error.
%
% OUTPUT
% data = the data associated with the event/property. (I.e. the value of
% the property)
% trialTime = the time relative to the start of the trial at which the
% event happened (or the property was set).
% trial = the trial in which the event happend (or the property was set).
% experimentTime = time relative to the first event in the experiment.
%
% BK - Mar 2016
p=inputParser;
p.addParameter('onePerTrial',true);
p.parse(varargin{:});

EVENTNAME= 1;
DATA =2;
TIME = 3;

ix = strcmp('trial',output.events.cic(EVENTNAME,:)); % Earliest event in a trial
trialNr = [output.events.cic{DATA,ix}];
trialStartTime = [output.events.cic{TIME,ix}];
nrTrials = max(trialNr);

ix = strcmp(eventName,output.events.(srcName)(EVENTNAME,:));
data = output.events.(srcName)(DATA,ix);
time = [output.events.(srcName){TIME,ix}];
nrEvents = length(time);

trial = nan(1,nrEvents);
trialTime =nan(1,nrEvents);
for i=1:nrEvents
    tr = find(time(i)>=trialStartTime ,1,'last');
    if ~isempty(tr)
        trial(i) = trialNr(tr);
        trialTime(i) = time(i)-trialStartTime(tr);
    end
end


experimentTime = time - output.events.cic{TIME,1}; % Relative to first event in CIC.


if p.Results.onePerTrial 
    ix = find(trial==0,1,'last'); % Setting before starting trial 1
    current = data(ix);    
    currentETime = experimentTime(ix);
    dataPerTrial = cell(nrTrials,1);
    eTimePerTrial = nan(1,nrTrials);
   for tr = 1:nrTrials
       nrInTrial = sum(trial==tr);
       if nrInTrial ==1
           current = data(trial==tr);
           currentETime = experimentTime(ix);
       elseif nrInTrial >1
           error([ eventName '  changes within a trial']);
       end
       dataPerTrial(tr) = current;
       eTimePerTrial(tr) = currentETime;
   end
   data =matrixifpossible(dataPerTrial);
   experimentTime = eTimePerTrial;
   timePerTrial  = -inf*ones(1,nrTrials);
   timePerTrial(trial(trial>0)) = trialTime(trial>0);

   trial = 1:nrTrials;
   trialTime = timePerTrial;
end